<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.food.domain.user.mapper.AdminMapper">

	<select id="findProductList"
		resultType="com.food.domain.product.dto.ProductDTO">
		select PRODUCT_NUMBER, NAME, DESCRIPTION, PRICE, QUANTITY,
		CREATED_DATE
		from PRODUCT_TB
	</select>

	<select id="findProductListByKeyword"
		resultType="com.food.domain.product.dto.ProductDTO"
		parameterType="map">
		select P.PRODUCT_NUMBER, P.NAME, P.DESCRIPTION, P.PRICE, P.QUANTITY,
		P.CREATED_DATE
		from PRODUCT_TB P
		WHERE 1=1
		<if test="searchInput != null and searchInput != ''">
			AND (P.PRODUCT_NUMBER LIKE '%' || #{searchInput} || '%'
			OR
			P.NAME LIKE '%' || #{searchInput} || '%')
		</if>
		<if test="stock_min != null">
			AND P.QUANTITY &gt;= #{stock_min}
		</if>
		<if test="stock_max != null">
			AND P.QUANTITY &lt;= #{stock_max}
		</if>
		<if test="price_min != null">
			AND P.PRICE &gt;= #{price_min}
		</if>
		<if test="price_max != null">
			AND P.PRICE &lt;= #{price_max}
		</if>
		<if test="fr_date != null and fr_date != ''">
			AND P.CREATED_DATE &gt;= TO_DATE(#{fr_date}, 'YYYY-MM-DD')
		</if>
		<if test="to_date != null and to_date != ''">
			AND P.CREATED_DATE &lt;= TO_DATE(#{to_date}, 'YYYY-MM-DD')
		</if>
		<if test="category != null and category != ''">
			AND P.PRODUCT_NUMBER IN (
			SELECT M.PRODUCT_NUMBER
			FROM
			PRODUCT_CATEGORY_MAPPING_TB M
			JOIN PRODUCT_CATEGORY_TB C ON
			M.CATEGORY_ID = C.ID
			WHERE C.ID = #{category}
			)
		</if>
		<if test="sale_status != null and sale_status != ''">
			AND P.PRODUCT_NUMBER IN (
			SELECT S.PRODUCT_NUMBER
			FROM
			SALES_POST_TB S
			JOIN PRODUCT_TB P ON P.PRODUCT_NUMBER =
			S.PRODUCT_NUMBER
			WHERE S.STATUS = #{sale_status}
			)
		</if>
	</select>



	<select id="findProductFileByProductNumber"
		parameterType="String">
		SELECT * FROM PRODUCT_FILE_TB WHERE PRODUCT_NUMBER =
		#{productNumber}
	</select>

	<select id="findProductCategoryByProductNumber"
		parameterType="String">
		SELECT C.ID, C.NAME, C.CATEGORY_CODE
		FROM
		PRODUCT_CATEGORY_TB C
		JOIN PRODUCT_CATEGORY_MAPPING_TB M ON C.ID =
		M.CATEGORY_ID
		WHERE PRODUCT_NUMBER = #{productNumber}
	</select>

	<select id="findCategoryList">
		SELECT * FROM PRODUCT_CATEGORY_TB
	</select>

	<select id="findSalesPostByProductNumber" parameterType="String">
		SELECT
		ID, ADMIN_ID, PRODUCT_NUMBER, TITLE, DESCRIPTION, CREATED_DATE,
		LAST_POST_DATE, UPDATED_DATE, START_POST_DATE, STATUS
		FROM
		SALES_POST_TB
		WHERE PRODUCT_NUMBER = #{productNumber}
	</select>

	<select id="getCategoryById" parameterType="Long"
		resultType="com.food.domain.product.dto.ProductCategoryDTO">
		SELECT id, name, category_code AS categoryCode, next_val
		FROM PRODUCT_CATEGORY_TB
		WHERE id = #{id}
	</select>

	<insert id="insertProduct" parameterType="map">
		INSERT INTO PRODUCT_TB
		(PRODUCT_NUMBER, NAME, DESCRIPTION, PRICE, QUANTITY,
		CREATED_DATE)
		VALUES (#{productNumber}, #{name}, #{description}, #{price},
		#{quantity},
		SYSTIMESTAMP)
	</insert>

	<insert id="insertProductFile"
		parameterType="com.food.domain.product.dto.ProductFileDTO">
		INSERT INTO PRODUCT_FILE_TB (PRODUCT_NUMBER,
		ORIGINAL_NAME, FILE_PATH,
		FILE_TYPE, UPLOAD_DATE)
		VALUES
		(#{productNumber}, #{originalName}, #{filePath}, #{fileType},
		SYSTIMESTAMP)
	</insert>

	<insert id="insertProductCategoryMapping">
		INSERT INTO PRODUCT_CATEGORY_MAPPING_TB
		(PRODUCT_NUMBER, CATEGORY_ID)
		VALUES (#{productNumber}, #{categoryId})
	</insert>

	<update id="updateCategoryById" parameterType="Long">
		UPDATE
		PRODUCT_CATEGORY_TB
		SET next_val = next_val + 1
		WHERE id = #{categoryId}
	</update>

	<delete id="deleteProductByProductNumber">
		DELETE FROM PRODUCT_TB WHERE PRODUCT_NUMBER =
		#{productNumber}
	</delete>

	<select id="findStockListByProductNumber" parameterType="String">
		SELECT *
		FROM STOCK_TB WHERE PRODUCT_NUMBER = #{productNumber}
	</select>

	<select id="finddStockListByKeyword"
		resultType="com.food.domain.product.dto.ProductDTO"
		parameterType="map">
		select P.PRODUCT_NUMBER, P.NAME, P.DESCRIPTION, P.PRICE, P.QUANTITY,
		P.CREATED_DATE
		from PRODUCT_TB P
		WHERE 1=1
		<if test="searchInput != null and searchInput != ''">
			AND (P.PRODUCT_NUMBER LIKE '%' || #{searchInput} || '%'
			OR
			P.NAME LIKE '%' || #{searchInput} || '%')
		</if>

		<if test="fr_date != null and fr_date != ''">
			AND P.CREATED_DATE &gt;= TO_DATE(#{fr_date}, 'YYYY-MM-DD')
		</if>
		<if test="to_date != null and to_date != ''">
			AND P.CREATED_DATE &lt;= TO_DATE(#{to_date}, 'YYYY-MM-DD')
		</if>
		<if test="category != null and category != ''">
			AND P.PRODUCT_NUMBER IN (
			SELECT M.PRODUCT_NUMBER
			FROM
			PRODUCT_CATEGORY_MAPPING_TB M
			JOIN PRODUCT_CATEGORY_TB C ON
			M.CATEGORY_ID = C.ID
			WHERE C.ID = #{category}
			)
		</if>
		<if test="fr_date != null and fr_date != ''">
			AND P.PRODUCT_NUMBER IN (
			SELECT S.PRODUCT_NUMBER
			FROM
			STOCK_TB S
			JOIN PRODUCT_TB P ON P.PRODUCT_NUMBER =
			S.PRODUCT_NUMBER
			WHERE S.LAST_UPDATED &gt;= TO_DATE(#{fr_date}, 'YYYY-MM-DD')
			)
		</if>
		<if test="to_date != null and to_date != ''">
			AND P.PRODUCT_NUMBER IN (
			SELECT S.PRODUCT_NUMBER
			FROM
			STOCK_TB S
			JOIN PRODUCT_TB P ON P.PRODUCT_NUMBER =
			S.PRODUCT_NUMBER
			WHERE S.LAST_UPDATED &lt;= TO_DATE(#{fr_date}, 'YYYY-MM-DD')
			)
		</if>
		<if test="stock_min != null">
			AND P.PRODUCT_NUMBER IN (
			SELECT S.PRODUCT_NUMBER
			FROM
			STOCK_TB S
			JOIN
			PRODUCT_TB P ON P.PRODUCT_NUMBER =
			S.PRODUCT_NUMBER
			WHERE
			S.QUANTITY &gt;= #{stock_min}
			)
		</if>
		<if test="stock_max != null">
			AND P.PRODUCT_NUMBER IN (
			SELECT S.PRODUCT_NUMBER
			FROM
			STOCK_TB S
			JOIN
			PRODUCT_TB P ON P.PRODUCT_NUMBER =
			S.PRODUCT_NUMBER
			WHERE
			S.QUANTITY &lt;= #{stock_max}
			)
		</if>
	</select>
	<select id="findStockByProductNumber" parameterType="String">
		SELECT ID,
		PRODUCT_NUMBER, QUANTITY, LAST_UPDATED
		FROM STOCK_TB
		WHERE
		PRODUCT_NUMBER = #{productNumber}
	</select>
	<update id="updateStock" parameterType="map">
		UPDATE STOCK_TB
		SET
		QUANTITY = #{updatedQuantity},
		LAST_UPDATED = CURRENT_TIMESTAMP
		WHERE
		PRODUCT_NUMBER = #{productNumber}
	</update>
	<insert id="insertTransaction">
		INSERT INTO STOCK_TRANSACTION_TB
		(PRODUCT_NUMBER,
		TRANSACTION_TYPE, QUANTITY, TRANSACTION_DATE, EXPIRATION_DATE)
		VALUES
		(#{productNumber}, #{type}, #{quantity}, CURRENT_TIMESTAMP,
		#{expirationDate})
	</insert>
	<select id="findTransaction">
		SELECT ID, PRODUCT_NUMBER, TRANSACTION_TYPE,
		QUANTITY, TRANSACTION_DATE,
		EXPIRATION_DATE
		FROM STOCK_TRANSACTION_TB
	</select>
	<select id="findProductByProductNumber" parameterType="String">
		SELECT
		PRODUCT_NUMBER, NAME, DESCRIPTION, PRICE, QUANTITY, CREATED_DATE
		FROM
		PRODUCT_TB
		WHERE PRODUCT_NUMBER = #{productNumber}
	</select>
	<select id="findTransactionList"
		resultType="com.food.domain.product.dto.StockTransactionDTO">
		SELECT *
		FROM (
		SELECT
		a.*,
		ROW_NUMBER() OVER (ORDER BY
		<if test="orderByClause != null and orderByClause != ''">
			${orderByClause}
		</if>
		<if test="orderByClause == null or orderByClause == ''">
			TRANSACTION_DATE DESC
		</if>
		) AS row_num
		FROM
		STOCK_TRANSACTION_TB a
		)
		WHERE row_num BETWEEN #{offset}
		AND #{offset} + #{pageSize} - 1
	</select>

	<!-- 전체 레코드 수 계산 쿼리 -->
	<select id="countTransactionList" resultType="int">
		SELECT COUNT(*)
		FROM STOCK_TRANSACTION_TB
	</select>

	<select id="findPostList"
		resultType="com.food.domain.sales.dto.SalesPostDTO">
		select ID, ADMIN_ID, PRODUCT_NUMBER, TITLE, DESCRIPTION,
		CREATED_DATE, LAST_POST_DATE, UPDATED_DATE, START_POST_DATE, STATUS
		from SALES_POST_TB
	</select>

	<select id="findPostListWithSearch"
		resultType="com.food.domain.sales.dto.SalesPostDTO"
		parameterType="map">
		select S.ID, S.ADMIN_ID, S.PRODUCT_NUMBER, S.TITLE, S.DESCRIPTION,
		S.CREATED_DATE,
		S.LAST_POST_DATE, S.UPDATED_DATE, S.START_POST_DATE,
		S.STATUS
		from
		SALES_POST_TB S
		WHERE 1=1
		<if test="searchInput != null and searchInput != ''">
			AND (S.PRODUCT_NUMBER LIKE '%' || #{searchInput} || '%'
			OR
			S.TITLE LIKE '%' || #{searchInput} || '%')
		</if>
		<if test="stock_min != null">
			AND S.PRODUCT_NUMBER IN (
			SELECT S.PRODUCT_NUMBER
			FROM
			SALES_POST_TB S
			JOIN
			PRODUCT_TB P ON
			S.PRODUCT_NUMBER = P.PRODUCT_NUMBER
			WHERE P.QUANTITY
			&gt;= #{stock_min}
			)
		</if>
		<if test="stock_max != null">
			AND S.PRODUCT_NUMBER IN (
			SELECT S.PRODUCT_NUMBER
			FROM
			SALES_POST_TB S
			JOIN
			PRODUCT_TB P ON
			S.PRODUCT_NUMBER = P.PRODUCT_NUMBER
			WHERE P.QUANTITY
			&lt;= #{stock_max}
			)
		</if>
		<if test="price_min != null">
			AND S.PRODUCT_NUMBER IN (
			SELECT S.PRODUCT_NUMBER
			FROM
			SALES_POST_TB S
			JOIN
			PRODUCT_TB P ON
			S.PRODUCT_NUMBER = P.PRODUCT_NUMBER
			WHERE P.PRICE &gt;=#{price_min}
			)
		</if>
		<if test="price_max != null">
			AND S.PRODUCT_NUMBER IN (
			SELECT S.PRODUCT_NUMBER
			FROM
			SALES_POST_TB S
			JOIN
			PRODUCT_TB P ON
			S.PRODUCT_NUMBER = P.PRODUCT_NUMBER
			WHERE P.PRICE &lt;=#{price_max}
			)
		</if>
		<if test="last_fr_date != null and last_fr_date != ''">
			AND S.LAST_POST_DATE &gt;= TO_DATE(#{last_fr_date},
			'YYYY-MM-DD')
		</if>
		<if test="last_to_date != null and last_to_date != ''">
			AND S.LAST_POST_DATE &lt;= TO_DATE(#{last_to_date},
			'YYYY-MM-DD')
		</if>
		<if test="register_fr_date != null and register_fr_date != ''">
			AND S.CREATED_DATE &gt;= TO_DATE(#{register_fr_date},
			'YYYY-MM-DD')
		</if>
		<if test="register_to_date != null and register_to_date != ''">
			AND S.CREATED_DATE &lt;= TO_DATE(#{register_to_date},
			'YYYY-MM-DD')
		</if>
		<if test="sale_status != null and sale_status != ''">
			AND S.STATUS = #{sale_status}
		</if>
	</select>
	<select id="findAdminByAdminId" parameterType="Long">
		SELECT * FROM ADMIN_TB WHERE ID = #{adminId}
	</select>
	<select id="findProductByName" parameterType="String">
	select * from PRODUCT_TB where name= #{name}
	</select>
</mapper>