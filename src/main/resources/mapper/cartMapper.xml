<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.food.domain.order.mapper.CartMapper">

    <select id="findByCustomerIdAndProductId" resultType="com.food.domain.order.dto.CartDTO">
        SELECT * FROM CART_TB WHERE CUSTOMER_ID = #{customerId} AND PRODUCT_NUMBER = #{productNumber}
    </select>
    
    <insert id="insertCart">
        INSERT INTO CART_TB (CUSTOMER_ID, PRODUCT_NUMBER, QUANTITY, LAST_DATE)
        VALUES (#{customerId}, #{productNumber}, #{quantity}, #{lastDate})
    </insert>
    
    <update id="updateCart">
        UPDATE CART_TB
        SET QUANTITY = #{quantity}, LAST_DATE = #{lastDate}
        WHERE CUSTOMER_ID = #{customerId} AND PRODUCT_NUMBER = #{productNumber}
    </update>
    
    <select id="getCartListByCustomerId" resultType="com.food.domain.order.dto.CartInfoDTO">
        SELECT 
            c.CUSTOMER_ID AS customerId,
            SUM(c.QUANTITY) AS quantity,
            p.PRODUCT_NUMBER AS productNumber,
            p.QUANTITY AS productQuantity,
            p.NAME AS name,
            p.DESCRIPTION AS description,
            p.PRICE AS price,
            pf.ORIGINAL_NAME AS originalName,
            pf.FILE_PATH AS filePath,
            pf.FILE_TYPE AS fileType,
            d.NAME AS discountName,
            d.TYPE AS discountType,
            d.DISCOUNT_VALUE AS discountValue,
            d.MAX_DISCOUNT AS maxDiscount,
            sp.ID AS salesPostId
        FROM 
            CART_TB c
            JOIN PRODUCT_TB p ON c.PRODUCT_NUMBER = p.PRODUCT_NUMBER
            LEFT JOIN (
                SELECT 
                    pf1.PRODUCT_NUMBER,
                    pf1.ORIGINAL_NAME,
                    pf1.FILE_PATH,
                    pf1.FILE_TYPE
                FROM PRODUCT_FILE_TB pf1
                INNER JOIN (
                    SELECT 
                        PRODUCT_NUMBER,
                        MIN(UPLOAD_DATE) AS earliest_date
                    FROM PRODUCT_FILE_TB
                    GROUP BY PRODUCT_NUMBER
                ) pf2 ON pf1.PRODUCT_NUMBER = pf2.PRODUCT_NUMBER AND pf1.UPLOAD_DATE = pf2.earliest_date
            ) pf ON p.PRODUCT_NUMBER = pf.PRODUCT_NUMBER
            LEFT JOIN DISCOUNT_TARGET_TB dt ON p.PRODUCT_NUMBER = dt.TARGET_ID AND dt.TARGET_TYPE = 'product'
            LEFT JOIN DISCOUNT_TB d ON dt.DISCOUNT_ID = d.ID
            LEFT JOIN SALES_POST_TB sp ON p.PRODUCT_NUMBER = sp.PRODUCT_NUMBER
        WHERE 
            c.CUSTOMER_ID = #{customerId}
        GROUP BY 
            c.CUSTOMER_ID,
            p.PRODUCT_NUMBER,
            p.QUANTITY,
            p.NAME,
            p.DESCRIPTION,
            p.PRICE,
            pf.ORIGINAL_NAME,
            pf.FILE_PATH,
            pf.FILE_TYPE,
            d.NAME,
            d.TYPE,
            d.DISCOUNT_VALUE,
            d.MAX_DISCOUNT,
            sp.ID
        ORDER BY p.PRODUCT_NUMBER
    </select>
    
    <delete id="deleteByCustomerIdAndProductNumber">
        DELETE FROM CART_TB WHERE CUSTOMER_ID = #{customerId} AND PRODUCT_NUMBER = #{productNumber}
    </delete>
    
    <delete id="deleteAllByCustomerId">
        DELETE FROM CART_TB WHERE CUSTOMER_ID = #{customerId}
    </delete>
</mapper>
